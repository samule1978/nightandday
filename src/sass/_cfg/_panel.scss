@use "../abstracts/variables";
@use "../abstracts/mixins";
@use "../abstracts/functions";
@use "../abstracts/nns_functions" as *;

$_mq-min-width: 600px;

siteConfig {
	--_bg-color: hsl(0, 0%, 17%);
	--_fg-color: hsl(0, 0%, 92%);
	--_color-orange-1: hsl(19, 100%, 50%);

	display: block;
	width: 100%;
	margin: 0px;
	padding: 0px;
	position: fixed;
	top: 0;
	z-index: var(--op-layer-important);

	transform: translateY(0%);
	transition-property: all;
	transition-duration: 0.45s;
	transition-timing-function: cubic-bezier(0.15, 0.2, 0.1, 1);
	transition-delay: 0s;

	// All child config section styles.
	& > *:not(button) {
		display: block;
		width: 100%;
		margin: 0px;
		padding: 0px 0px;
		color: var(--_fg-color);
		font-family: Helvetica, sans-serif;
		border-bottom: solid 1px var(--_color-orange-1);
		background-color: var(--_bg-color);
		opacity: 95%;

		@include mixins.hover {
			opacity: 100%;
		}

		section {
			@include mixins.flexbox();
			align-items: center;
			padding: 5px 10px;
			position: relative;
			justify-content: space-between;
			z-index: var(--op-layer-important);

			&.active {
				> *:not(ol) {
					span:first-child {
						color: var(--_color-orange-1);
					}
				}
			}
			> *:not(ol) {
				--_width: 100%;
				--_hover-indicator-size: 0px;

				cursor: pointer;
				width: var(--_width);
				padding-bottom: var(--_hover-indicator-size);

				@include mixins.hover {
					color: var(--_color-orange-1);
					border-bottom: solid var(--_hover-indicator-size) hsla(0, 0%, 92%, 0.3);
				}

				span:first-child {
					margin-right: 0.5em;
					display: block;
				}
				span:last-child {
					color: var(--_color-orange-1);
					font-size: 0.75em;
					font-style: italic;
					font-weight: 300;
					display: block;
				}
			}

			ol {
				@include mixins.flexbox();
				list-style: none;
				margin: 0;
				padding: 0;

				li {
					@include mixins.flexbox();
					justify-content: center;
					align-items: center;

					border: solid 2px;
					border-radius: 1rem;
					cursor: pointer;
					margin: 0 0 0 0.75em;
					width: 2em;
					height: 2em;
					font-size: 0.75rem;

					&.active {
						color: var(--_color-orange-1);
						border-color: var(--_color-orange-1);
					}
					@include mixins.hover {
						color: var(--_fg-color-1);
						background-color: var(--_color-orange-1);
						border-color: var(--_color-orange-1);
					}
				}
			}

			@media only screen and (min-width: $_mq-min-width) {
				&::before {
					text-transform: uppercase;
					position: absolute;
					font-size: 0.4rem;
					top: 0rem;
				}

				> *:not(ol) {
					display: flex;
					flex-wrap: wrap;
					justify-content: left;
					place-items: baseline;

					span:last-child {
						&::before {
							color: var(--_fg-color);
						}
						&::after {
							content: " ' />";
							color: var(--_fg-color);
						}
					}
				}
			}
		}
	}

	// Button styles.
	> button {
		--_button-width: 30px;
		--_button-height: 30px;

		cursor: pointer;
		font-size: 100% !important;
		text-align: center;
		color: var(--_bg-color);
		width: var(--_button-width);
		height: var(--_button-height);
		margin: 0;
		padding: 0;
		border-width: 0;
		border-radius: 100%;
		background-color: var(--_color-orange-1);

		position: absolute;
		bottom: calc((var(--_button-height) * 0.5) * -1);
		left: 50%;

		transform: scale(1) translateX(-50%);
		transition-property: all;
		transition-duration: 0.45s;
		transition-timing-function: cubic-bezier(0.15, 0.2, 0.1, 1);
		transition-delay: 0s;

		z-index: var(--op-layer-important);

		@include mixins.hover {
			color: var(--_fg-color);
			transform: scale(1.0) translateX(-50%);
		}
	}
	&.siteconfig-panel__closed {
		transform: translateY(-100%);

		button {
			bottom: calc((var(--_button-height) * 1) * -1);
		}
	}
}

toggle {	
	display: flex;	
	align-items: center;
	justify-content: space-between;
	font-size: 0.75rem;
	padding: 5px 10px;
	position: relative;
	text-transform: uppercase;
	background-color: hsl(0, 0%, 0%);
	color: var(--_color-orange-1);
	border-bottom: solid 1px var(--_color-orange-1);
	opacity: 100%;
	span {
		
	}
	button {
		border: 0;
		background-color: transparent;
		color: inherit;
		border: solid 2px;
		border-radius: 1rem;
		width: 2em;
		height: 2em;
		margin: 0;
		padding: 0;
		font-size: inherit !important;
		cursor: pointer;

		//@include mixins.hover {
		&:hover {
			color: hsl(0, 0%, 92%);
			background-color: var(--_color-orange-1);
			border-color: var(--_color-orange-1);
		}
	}
}

brandConfig {
	&.collapse {
		> *:not(toggle) {
			height: 0;
			opacity: 0;
			padding: 0;
			margin: 0;
			pointer-events: none;
		}
	}
	
	section {
		@media only screen and (min-width: $_mq-min-width) {
			&::before {
				//content: "Brand";
			}

			> *:not(ol) {
				span:last-child {
					&::before {
						content: "<brand desc=' ";
					}
				}
			}
		}
	}
}
layoutConfig {
	&.collapse {
		> *:not(toggle) {
			height: 0;
			opacity: 0;
			padding: 0;
			margin: 0;
			pointer-events: none;
		}
	}
	
	section {
		@media only screen and (min-width: $_mq-min-width) {
			&::before {
				//content: "Layout";
			}

			> *:not(ol) {
				span:last-child {
					&::before {
						content: "<layout desc=' ";
					}
				}
			}
		}
	}
}
styleconfig {
	&.collapse {
		> *:not(toggle) {
			height: 0;
			opacity: 0;
			padding: 0;
			margin: 0;
			pointer-events: none;
		}
	}
	
	section {
		@media only screen and (min-width: $_mq-min-width) {
			&::before {
				//content: "Style";
			}

			> *:not(ol) {
				span:last-child {
					&::before {
						content: "<style desc=' ";
					}
				}
			}
		}
	}
}

typeconfig {
	&.collapse {
		> *:not(toggle) {
			height: 0;
			opacity: 0;
			padding: 0;
			margin: 0;
			pointer-events: none;
		}
	}
	
	section {
		@media only screen and (min-width: $_mq-min-width) {
			&::before {
				//content: "Type";
			}

			> *:not(ol) {
				span:last-child {
					&::before {
						content: "<type desc=' ";
					}
				}
			}
		}
	}
}

.draggable {
	cursor: move;

	transform: translateY(0%);
	transition-property: all;
	transition-duration: 0.45s;
	transition-timing-function: cubic-bezier(0.15, 0.2, 0.1, 1);
	transition-delay: 0s;

	&:hover {
		outline: dashed 0.25px hsl(0, 0%, 100%);
		//transform: scale(1.005, 1.005);		
	}
}
.dragging {
	pointer-events: none;
}

.layout--focus {
	--_color-layout-bg: hsla(19, 100%, 50%, 0.1);
	--_color-layout-outline: hsl(19, 100%, 50%);

	outline: dashed 2px var(--_color-layout-outline);
	position: relative;

	&::before {
		content: "";
		background-color: var(--_color-layout-bg);
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
	}
}