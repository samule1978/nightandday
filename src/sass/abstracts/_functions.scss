@use "../_sg78/sg78_variables" as sg78;

// Remove nth item from a list.
@function remove-nth($list, $index) {
	// See: https://kittygiraudel.com/2013/08/08/advanced-sass-list-functions/
	$result: null;

	@if type-of($index) != number {
		@warn "$index: #{quote($index)} is not a number for `remove-nth`.";
	} @else if $index == 0 {
		@warn "List index 0 must be a non-zero integer for `remove-nth`.";
	} @else if abs($index) > length($list) {
		@warn "List index is #{$index} but list is only #{length($list)} item long for `remove-nth`.";
	} @else {
		$result: ();
		$index: if($index < 0, length($list) + $index + 1, $index);

		@for $i from 1 through length($list) {
			@if $i != $index {
				$result: append($result, nth($list, $i));
			}
		}
	}

	@return $result;
}

@function str-split($string, $separator) {
	// empty array/list
	$split-arr: ();
	// first index of separator in string
	$index: str-index($string, $separator);
	// loop through string
	@while $index != null {
		// get the substring from the first character to the separator
		$item: str-slice($string, 1, $index - 1);
		// push item to array
		$split-arr: append($split-arr, $item);
		// remove item and separator from string
		$string: str-slice($string, $index + 1);
		// find new index of separator
		$index: str-index($string, $separator);
	}
	// add the remaining string to list (the last item)
	$split-arr: append($split-arr, $string);

	@return $split-arr;
}

////
/// String to number converter
/// @author Hugo Giraudel
/// @access private
/// See: https://gist.github.com/KittyGiraudel/9fa19d254864f33d4a80
///
/// Casts a string into a number
///
/// @param {String | Number} $value - Value to be parsed
///
/// @return {Number}
///
@function to-number($value) {
	@if type-of($value) == "number" {
		@return $value;
	} @else if type-of($value) != "string" {
		$_: log("Value for `to-number` should be a number or a string.");
	}

	$result: 0;
	$digits: 0;
	$minus: str-slice($value, 1, 1) == "-";
	$numbers: (
		"0": 0,
		"1": 1,
		"2": 2,
		"3": 3,
		"4": 4,
		"5": 5,
		"6": 6,
		"7": 7,
		"8": 8,
		"9": 9,
	);

	@for $i from if($minus, 2, 1) through str-length($value) {
		$character: str-slice($value, $i, $i);

		@if not(index(map-keys($numbers), $character) or $character == ".") {
			@return to-length(
				if($minus, -$result, $result),
				str-slice($value, $i)
			);
		}

		@if $character == "." {
			$digits: 1;
		} @else if $digits == 0 {
			$result: $result * 10 + map-get($numbers, $character);
		} @else {
			$digits: $digits * 10;
			$result: $result + map-get($numbers, $character) / $digits;
		}
	}

	@return if($minus, -$result, $result);
}